/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tratamientoimam;

import java.awt.BorderLayout;
import java.awt.Desktop;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.Caret;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author Antonio
 */
public class GUI extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form GUI
     */
    public GUI() {
        
        
        
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu9 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();

        jFrame1.setTitle("Configuraciones");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 504, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 306, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tratamiento de Datos IMAM");
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setText("Detalles:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Iniciar");
        jButton1.setEnabled(false);
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jButton1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);

        jMenu1.setText("Archivo");

        jMenu3.setText("Abrir Archivo");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenu1.add(jMenu3);

        jMenu9.setText("Abrir Dierectorio");
        jMenu9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu9MouseClicked(evt);
            }
        });
        jMenu1.add(jMenu9);

        jMenu8.setText("Salir");
        jMenu8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu8MouseClicked(evt);
            }
        });
        jMenu1.add(jMenu8);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Configuracion");

        jMenu4.setText("Editar Config");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenu2.add(jMenu4);

        jMenuBar1.add(jMenu2);

        jMenu5.setText("Ayuda");

        jMenu6.setText("Formato");
        jMenu5.add(jMenu6);

        jMenu7.setText("Como Funciona");
        jMenu5.add(jMenu7);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        imam = new LimpiadorIMAM(this.dirArchivo, this.conf, this.jTextArea1);
        this.imam.LeeArchivo();
        try {
            this.imam.guardarArchivoExcel();
            // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    
    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked

        
        
        JFileChooser buscadorDoc= new JFileChooser();
        FileNameExtensionFilter filtro= new FileNameExtensionFilter("Excel Archivos","xls","xlsx");
        buscadorDoc.setFileFilter(filtro);
        int valorDeRetorno= buscadorDoc.showOpenDialog(new JPanel());
               
        if (valorDeRetorno==JFileChooser.APPROVE_OPTION) {
            dirArchivo=buscadorDoc.getSelectedFile().getPath();
            this.jTextArea1.append("Archivo Seleccionado...");
            this.jTextArea1.append("\n"+dirArchivo);
            this.jButton1.setEnabled(true);
        }else{
            this.jButton1.setEnabled(false);
        }

        
    }//GEN-LAST:event_jMenu3MouseClicked

    public void actConfiguracion(){
        File directorio = new File("c:\\IMAMprograma\\Config\\Configuracion.txt");
        try {
            String confInicialStandar[] = new String[9];
            confInicialStandar[0]=this.conf.getNumeroDeColumnas()+"";
            confInicialStandar[1]=this.conf.getCelLoQueSeBusca()+"";
            confInicialStandar[2]=this.conf.getLoQueSebusca();
            confInicialStandar[3]=this.conf.getCentroDCostos();
            confInicialStandar[4]=this.conf.getCelCentroCostos()+"";
            confInicialStandar[5]=this.conf.getUniInfo();
            confInicialStandar[6]=this.conf.getCelUniInfo()+"";
            confInicialStandar[7]=this.conf.getInicioFila();
            confInicialStandar[8]="";
            for (int i = 0; i < this.conf.getTitulos().size(); i++) {
                confInicialStandar[8] = confInicialStandar[8] + this.conf.getTitulos().get(i)+",";
            }
            // Si el archivo no existe es creado
            if (!directorio.exists()) {
                directorio.createNewFile();
            }
            
            FileWriter fw = new FileWriter(directorio);
            BufferedWriter bw = new BufferedWriter(fw);
            for (int i = 0; i < confInicialStandar.length; i++) {
                bw.write(confInicialStandar[i]+"\n");
            }
            bw.close();
        }catch(Exception e){
        }
    }

    public void crearConfig(){       
        File directorio = new File("c:\\IMAMprograma\\Config\\Configuracion.txt");
        File infoDir = new File("c:\\IMAMprograma\\Config\\Config-info.txt");
        
        
        try {
            String info[]={"0 numero De Columnas","1 numero de celda para encontrar lo que busco","2 palabra clave para identificar lo que busco","3 palabra clave para identificar el centro de costos","4 numero de celda para encontrar el centro de costos","5 palabra clave para identificar la unidad de informacion","6 numero de celda para encontrar la unidad de informacion","7 palabra clave para detectar el inicio de fila de un target","8 titulos que utiliza para ser manejados","Numero de columnas","Numero de columna Compu","Numero de columna Centro de costos","Numero de columna Unidad de informacion","Palabra clave para Compu","Palabra clave para Centro de costos","palabra clave para Unidad de informacion","Palabra para detectar inicio de fila"};
            String confInicialStandar[] = {"20","3","COMPUT","Centro de Costos:","0","Unidad de Información:","0","IMSSR","U.Neg,NNI,Clase,D. Clase,C. Clase,Artículo,D Artículo,Marca,ID Serie,Categ,RS,Ubic.,Costo,Fec.Adq.,NoAlta,Contrato,F.Ult.Mov.,NoMov.,Matrícula,Nombre Usuario,"};
            // Si el archivo no existe es creado
            if (!directorio.exists()) {
                directorio.createNewFile();
            }
            
            FileWriter fw = new FileWriter(directorio);
            BufferedWriter bw = new BufferedWriter(fw);
            for (int i = 0; i < confInicialStandar.length; i++) {
                bw.write(confInicialStandar[i]+"\n");
            }
            bw.close();
            
            fw = new FileWriter(infoDir);
            bw = new BufferedWriter(fw);
            for (int i = 0; i < info.length; i++) {
                bw.write(info[i]+"\n");
            }
            bw.close();
            
            
            
            
            this.jTextArea1.append("\n El fichero se ha creado correctamente!!");
        } catch (Exception e){
            
            e.printStackTrace();
        }
        
        
    }
    
    
    public void cargarArchivoConfig(){
        
        DefaultCaret caret = (DefaultCaret) this.jTextArea1.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        
        File archivo;
        FileReader fr=null;
        BufferedReader br;
        File directorio = new File("c:\\IMAMprograma\\Config");
        
        if (!directorio.exists()) {
            directorio.mkdirs();
            this.jTextArea1.append("\n Creando Directorio de Archivos...");
        }
        
        try {
            // Apertura del fichero y creacion de BufferedReader para poder
           // hacer una lectura comoda (disponer del metodo readLine()).

            archivo = new File (directorio+"\\Configuracion.txt");
            if (!archivo.exists()){
                this.jTextArea1.append("\n Creando Archivo de Configuracion...");
                // A partir del objeto File creamos el fichero físicamente
                crearConfig();
            }
            
            fr = new FileReader (archivo);
            br = new BufferedReader((new InputStreamReader(new FileInputStream(archivo))));
               // Lectura del fichero
            String linea;
            this.jTextArea1.append("\nCargando Configuracion");
            int aux=0;
            while((linea=br.readLine())!=null){

                this.jTextArea1.append("\n"+linea);
                switch(aux){
                    case 0:
                        conf.setNumeroDeColumnas(Integer.valueOf(linea));
                        break;
                    case 1:
                        this.conf.setCelLoQueSeBusca(Integer.valueOf(linea));
                        break;
                    case 2:
                        this.conf.setLoQueSebusca(linea);
                        break;
                    case 3:
                        this.conf.setCentroDCostos(linea);
                        break;
                    case 4:
                        this.conf.setCelCentroCostos(Integer.valueOf(linea));
                        break;
                    case 5:
                        this.conf.setUniInfo(linea);
                        break;
                    case 6:
                           
                        this.conf.setCelUniInfo(Integer.valueOf(linea));
                        break;
                    case 7:
                        this.conf.setInicioFila(linea);
                        break;
                    case 8:
                        this.conf.limpiarTitulos(linea);
                        break;
                }
                aux++;
            }
            this.jTextArea1.append("\nListo para continuar...");
            
            
        }catch(HeadlessException | IOException e){
        }finally{
            
               // En el finally cerramos el fichero, para asegurarnos
               // que se cierra tanto si todo va bien como si salta 
               // una excepcion.
            try{                    
                if( null != fr ){   
                    fr.close();     
                }                  
            }catch (IOException e2){ 
            }
        }
    }
    
    
    
    public void createConfig(){
        String[] labels={"Numero de columnas","Numero de columna Compu","Numero de columna Centro de costos","Numero de columna Unidad de informacion","Palabra clave para Compu","Palabra clave para Centro de costos","palabra clave para Unidad de informacion","Palabra para detectar inicio de fila"};
        text = new JTextField[labels.length];
        this.jFrame1 = new JFrame();
        this.jFrame1.setSize(600, 250);
        this.jFrame1.setLayout(new BorderLayout());
        JPanel pprin, pima, formulario, x, y;
        formulario = new JPanel();
        
        formulario.setLayout(new GridLayout(labels.length,1));
        
        for (int i = 0; i < labels.length; i++) {
            x= new JPanel();
            x.setLayout(new GridLayout(1,2));
            x.add(new JLabel(labels[i]));
            x.add(text[i]= new JTextField());
            formulario.add(x);
        }
        
        y = new JPanel();
        y.setLayout(new FlowLayout());
        y.add(this.guardar= new JButton("Guardar"));
        y.add(this.cancel= new JButton("Cancelar"));
        pprin= new JPanel();
        pima= new JPanel();
        pprin.setLayout(new BorderLayout());
        pprin.add(formulario, BorderLayout.CENTER);
        pprin.add(y, BorderLayout.SOUTH);
        
        this.text[0].setText(""+this.conf.getNumeroDeColumnas());
        this.text[1].setText(""+this.conf.getCelLoQueSeBusca());
        this.text[2].setText(this.conf.getCelCentroCostos()+"");
        this.text[3].setText(this.conf.getCelUniInfo()+"");
        this.text[4].setText(this.conf.getLoQueSebusca());
        this.text[5].setText(this.conf.getCentroDCostos());
        this.text[6].setText(this.conf.getUniInfo());
        this.text[7].setText(this.conf.getInicioFila());
            
        
        
        
        this.jFrame1.add(pprin, BorderLayout.CENTER);
        this.jFrame1.add(pima, BorderLayout.LINE_END);
        this.cancel.addActionListener(this);
        this.guardar.addActionListener(this);
        
        this.jFrame1.setResizable(false);
        this.jFrame1.setTitle("Configuracion");
        this.jFrame1.setVisible(true);
        
        this.jFrame1.setLocationRelativeTo(null);
        
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource()==this.cancel) {
            this.jFrame1.dispose();
        }
        if (e.getSource()==this.guardar) {
            this.conf.setNumeroDeColumnas(Integer.valueOf(this.text[0].getText()));
            this.conf.setCelLoQueSeBusca(Integer.valueOf(this.text[1].getText()));
            this.conf.setCelCentroCostos(Integer.valueOf(this.text[2].getText()));
            this.conf.setCelUniInfo(Integer.valueOf(this.text[3].getText()));
            this.conf.setLoQueSebusca(this.text[4].getText());
            this.conf.setCentroDCostos(this.text[5].getText());
            this.conf.setUniInfo(this.text[6].getText());
            this.conf.setInicioFila(this.text[7].getText());
            this.jFrame1.dispose();
            actConfiguracion();
            this.jTextArea1.append("\n Nuevos Cambios Guardados");
            this.jButton1.setEnabled(false);
            
            
        }
    }
    
    
    private void jMenu8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu8MouseClicked
        this.dispose();
    }//GEN-LAST:event_jMenu8MouseClicked

    private void jMenu9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu9MouseClicked
        File directorio = new File("c:\\IMAMprograma\\ArchivosCreados");
        
        if (!directorio.exists()) {
            directorio.mkdirs();
            this.jTextArea1.append("\n Creando Directorio de Archivos...");
        }
        try {
            Desktop.getDesktop().open(directorio);
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenu9MouseClicked

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        this.createConfig();
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu4MouseClicked

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    private String dirArchivo;
    private Config conf = new Config();
    private LimpiadorIMAM imam;
    private JButton cancel, guardar;
    private JTextField text[];
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
